<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>icws on This is a title</title>
    <link>/tags/icws/</link>
    <description>Recent content in icws on This is a title</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 May 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/icws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MS-Rank</title>
      <link>/posts/paper/ms-rank/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0800</pubDate>
      
      <guid>/posts/paper/ms-rank/</guid>
      <description>MS-Rank: Multi-Metric and Self-Adaptive Root Cause Diagnosis for Microservice Applications
ICWS 2019
主要贡献：  根据一系列的metrics，构建一个调用图
 基于随机游走算法提出了根因定位算法
 为了提高定位的准确性，用一种自适应的方法调整metrics的权重
  2 RW 提到了Microscope和Sieve
论文里居然还提到了SRE…hh
3 Solution 3A Framwork 针对不同的情景，选择的metric也不一样。UI相关的，一般更在意latency；计算相关的比如hadoop，更在意cpu负载。文章把微服务系统看成是一个黑盒，那么metric的权重这样的概念就出来了。
3B Metric latency适合短连接服务，但不适合长连接服务。
常见的metric：latency、throughput、CPU、MEM、disk、I/O，power。power = throughput / latency
Gradient相关重要的metric：
Gradient(t) = Mj,i(t) - Mji(t-1)
Gradient ratio(t) = Gradient(t) / Mj,i(t)
还有两个没列出来
3C Graph Construction 基于PC算法，依旧是一个DAG。额，这部分看得我一头雾水
3D Random Walk Diagnosis 一个最直观也是最常用的根因定位方法是计算某个服务的metric和Anomaly服务的metric的相似度。我看的其他论文里也大致是这个思想
同样这篇论文用皮尔逊相似度，不过添加了权重的部分。可以得到vi和vj的关系（相似度）
Transition（游走）：向前（遇到高相似度）、向内（前后都是低相似度，则停留在自身）、向后（遇到低相似度）
3E Weight Update P(M) Precision Function，计算定位结果的准确性。还有更新权重，都是一个公式带过。
3F Example 收集了2小时（7200s）的数据，每5s一次收集，对于每个metric都有1440个记录。</description>
    </item>
    
  </channel>
</rss>