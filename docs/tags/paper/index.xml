<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>paper on 暴躁老农</title>
    <link>https://zecoo.github.io/hugo/tags/paper/</link>
    <description>Recent content in paper on 暴躁老农</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 27 Jan 2021 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://zecoo.github.io/hugo/tags/paper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>论文改改改</title>
      <link>https://zecoo.github.io/hugo/posts/paper/%E8%AE%BA%E6%96%87%E6%94%B9%E6%94%B9%E6%94%B9/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>https://zecoo.github.io/hugo/posts/paper/%E8%AE%BA%E6%96%87%E6%94%B9%E6%94%B9%E6%94%B9/</guid>
      <description>第二版论文思路  先用GJSPCA缩小异常微服务的范围得到候选异常微服务集合A（类似MicroRCA中的聚类） 对于A中的每个微服务m，GJSPCA会得到一个score1 拓展A中任意两个微服务之间的路径组成异常子图：集合A+（类似MicroHECL的剪枝、MicroRCA中的Subgraph） 然后借用MicroHECL中的异常传播方向给集合A+中的每个微服务的打分进行累加 对于cpu、throughput、error count等metric，计算Corr，更新score2为score2*max_Corr final_score = ∂*score1 + (1-∂)score2，作为PPR的输入 PPR得到最终的微服务异常排序。并且可以参考Corr进行异常排查。  问题：
 GJSPCA和普通的PCA的区别在哪里？JSPCA变稀疏，加入G即加入了拉普拉斯矩阵图信息 score1表示的是什么？对于新基距离最大的那个source MicroHECL对异常传播方向是怎么研究的？通过异常传播链的分析，可以得到一系列的候选异常根因服务。 GJSPCA和聚类还有相似度计算相比优势在哪里？  其他论文可借鉴部分  IWQoS 2020 MicroCause：architect好像放后面比较合适？ HECL：arc不是我那样画的，最好把我之前的框框图和流程图结合到一起 AutoMAP：图一定要用svg的，哪怕分辨率从72调成300，也给人一种低级的感觉。  异常情况分类  硬件异常：cpu、mem、network、磁盘等异常 内部异常：服务内部错误调用比较多（参数错误导致bug？），即错误异常比较多 流量异常：throughput出现问题，负载均衡没做好也属于这一类  反映在响应时间上都会出现RT增大或者服务不可用。其中Zipkin可以cover的仅有2。
1硬件异常，可能会导致某些微服务的响应时间异常，如cpu敏感、磁盘敏感的微服务。但是不是微服务出现异常而是硬件出现异常，这部分Zipkin不能cover。3流量异常，在实验的过程中给一个服务增加流量负载，不是这个服务出现异常，而应该是流量出现异常。
Metric分类 根据AutoMAP这篇论文，Metrics有：Latency、Throughput、CPU、Memory、IO、Power、Avaliability
根据MicroHECL这篇论文，Metics有：EC(Error Count)、RT(Rsponse Time)、QPS(Querys Per Second)
测试分类     Throughput CPU Memory IO 其他网络     主机 / 部分影响 都有影响 fe到checkout有影响
ppage到recom有影响 直接影响   容器配置 直接影响 部分影响 直接影响 / /    Stree方法 增加主机内存负载：</description>
    </item>
    
  </channel>
</rss>